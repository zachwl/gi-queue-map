name: Main Testing

on:
  workflow_dispatch: # Allows manual triggering of the workflow
  
permissions:
  contents: write

jobs:
  testing123:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install Chrome and Chromedriver
      run: |
        sudo apt-get update
        sudo apt-get install -y wget unzip
        sudo apt-get install -y google-chrome-stable
        
        # Get Chrome major version
        CHROME_VERSION=$(google-chrome --version | awk '{print $3}' | cut -d'.' -f1)
        echo "Chrome Version: $CHROME_VERSION"
        
        # Attempt to download the specific Chromedriver version
        if wget -q --spider "https://chromedriver.storage.googleapis.com/LATEST_RELEASE_$CHROME_VERSION"; then
          wget -q "https://chromedriver.storage.googleapis.com/LATEST_RELEASE_$CHROME_VERSION" -O LATEST_RELEASE
          CHROMEDRIVER_VERSION=$(cat LATEST_RELEASE)
        else
          echo "Specific Chromedriver version for Chrome $CHROME_VERSION not found. Fetching the latest release."
          wget -q "https://chromedriver.storage.googleapis.com/LATEST_RELEASE" -O LATEST_RELEASE
          CHROMEDRIVER_VERSION=$(cat LATEST_RELEASE)
        fi
        
        echo "Using Chromedriver Version: $CHROMEDRIVER_VERSION"
        wget "https://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_linux64.zip"
        unzip chromedriver_linux64.zip
        sudo mv chromedriver /usr/local/bin/
        sudo chmod +x /usr/local/bin/chromedriver

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run testing script
      env:
        EMAIL: ${{ secrets.EMAIL }}
        PASSWORD: ${{ secrets.PASSWORD }}
      run: python scripts/main.py

    - name: Commit and Push Changes
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git add data/individual_queues/*.csv  # Adds all CSV files in the directory
        git add data/agg_county_data.geojson
        git add data/all_queued_projects.json
        git add scripts/script_data/download_settings.csv
        git diff --cached --exit-code || git commit -m "Update multiple files"
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
